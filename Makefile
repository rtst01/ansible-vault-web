# Makefile –¥–ª—è Ansible Vault Web Service
.PHONY: help build build-backend build-frontend clean test docker-build docker-run docker-stop k8s-deploy k8s-delete

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
VERSION ?= latest
REGISTRY ?= localhost:5000
NAMESPACE ?= ansible-vault

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN := \033[0;32m
RED := \033[0;31m
YELLOW := \033[1;33m
NC := \033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(GREEN)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@echo ""
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "  $(YELLOW)%-15s$(NC) %s\n", $$1, $$2}' $(MAKEFILE_LIST)

# –°–±–æ—Ä–∫–∞
build: ## –°–æ–±—Ä–∞—Ç—å –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
	@echo "$(GREEN)üîß –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã...$(NC)"
	@chmod +x scripts/build.sh
	@./scripts/build.sh $(VERSION) $(REGISTRY)

build-backend: ## –°–æ–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ backend
	@echo "$(GREEN)üîß –°–æ–±–∏—Ä–∞–µ–º backend...$(NC)"
	docker build -t ansible-vault-backend:$(VERSION) .

build-frontend: ## –°–æ–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ frontend
	@echo "$(GREEN)üîß –°–æ–±–∏—Ä–∞–µ–º frontend...$(NC)"
	docker build -t ansible-vault-frontend:$(VERSION) ./frontend

# –û—á–∏—Å—Ç–∫–∞
clean: ## –û—á–∏—Å—Ç–∏—Ç—å Docker –æ–±—Ä–∞–∑—ã –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "$(GREEN)üßπ –û—á–∏—â–∞–µ–º Docker...$(NC)"
	docker system prune -f
	docker image prune -f

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "$(GREEN)üß™ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã...$(NC)"
	cd app && python -m pytest tests/ -v

# Docker
docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã
	@echo "$(GREEN)üê≥ –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑—ã...$(NC)"
	@chmod +x scripts/build.sh
	@./scripts/build.sh $(VERSION) $(REGISTRY)

docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å Docker Compose
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å Docker Compose...$(NC)"
	docker-compose up -d

docker-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker Compose
	@echo "$(GREEN)‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose...$(NC)"
	docker-compose down

# Kubernetes
k8s-deploy: ## –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤ Kubernetes
	@echo "$(GREEN)üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º –≤ Kubernetes...$(NC)"
	@chmod +x scripts/deploy-k8s.sh
	@./scripts/deploy-k8s.sh

k8s-delete: ## –£–¥–∞–ª–∏—Ç—å –∏–∑ Kubernetes
	@echo "$(GREEN)üóëÔ∏è –£–¥–∞–ª—è–µ–º –∏–∑ Kubernetes...$(NC)"
	kubectl delete namespace $(NAMESPACE)

k8s-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Kubernetes
	@echo "$(GREEN)üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏...$(NC)"
	kubectl logs -f deployment/ansible-vault-backend -n $(NAMESPACE)

k8s-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å Kubernetes
	@echo "$(GREEN)üìä –°—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è...$(NC)"
	kubectl get all -n $(NAMESPACE)

# –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
dev-backend: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å backend –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫–∞–µ–º backend –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	cd app && uvicorn main:app --reload --host 0.0.0.0 --port 8000

dev-frontend: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å frontend –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫–∞–µ–º frontend –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	cd frontend && npm start

# –£—Ç–∏–ª–∏—Ç—ã
logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Docker Compose
	@echo "$(GREEN)üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏...$(NC)"
	docker-compose logs -f

ps: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å Docker Compose
	@echo "$(GREEN)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	docker-compose ps

# –ü—Ä–æ–¥–∞–∫—à–Ω
prod-build: ## –°–±–æ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞
	@echo "$(GREEN)üè≠ –°–±–æ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞...$(NC)"
	VERSION=$(VERSION) make build
	@echo "$(GREEN)‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"

prod-deploy: ## –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω
	@echo "$(GREEN)üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω...$(NC)"
	make k8s-deploy
	@echo "$(GREEN)‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!$(NC)"
