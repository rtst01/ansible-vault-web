#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤ Kubernetes
set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ Kubernetes..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ kubectl
if ! command -v kubectl &> /dev/null; then
    error "kubectl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ kubectl –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–ª–∞—Å—Ç–µ—Ä—É
if ! kubectl cluster-info &> /dev/null; then
    error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Kubernetes –∫–ª–∞—Å—Ç–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é."
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ namespace
NAMESPACE="ansible-vault"
if ! kubectl get namespace $NAMESPACE &> /dev/null; then
    log "üì¶ –°–æ–∑–¥–∞–µ–º namespace $NAMESPACE..."
    kubectl apply -f k8s/namespace.yaml
else
    log "‚úÖ Namespace $NAMESPACE —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ü—Ä–∏–º–µ–Ω—è–µ–º ConfigMap –∏ Secret
log "üîß –ü—Ä–∏–º–µ–Ω—è–µ–º ConfigMap –∏ Secret..."
kubectl apply -f k8s/configmap.yaml
kubectl apply -f k8s/secret.yaml

# –ü—Ä–∏–º–µ–Ω—è–µ–º Deployments
log "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º backend..."
kubectl apply -f k8s/backend-deployment.yaml

log "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º frontend..."
kubectl apply -f k8s/frontend-deployment.yaml

# –ü—Ä–∏–º–µ–Ω—è–µ–º Services
log "üîå –°–æ–∑–¥–∞–µ–º Services..."
kubectl apply -f k8s/services.yaml

# –ü—Ä–∏–º–µ–Ω—è–µ–º Ingress (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
if [ -f "k8s/ingress.yaml" ]; then
    log "üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Ingress..."
    kubectl apply -f k8s/ingress.yaml
fi

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø–æ–¥–æ–≤
log "‚è≥ –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø–æ–¥–æ–≤..."
kubectl wait --for=condition=ready pod -l app=ansible-vault-backend -n $NAMESPACE --timeout=300s
kubectl wait --for=condition=ready pod -l app=ansible-vault-frontend -n $NAMESPACE --timeout=300s

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
log "üìä –°—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:"
kubectl get all -n $NAMESPACE

log "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
log "–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: kubectl logs -f deployment/ansible-vault-backend -n $NAMESPACE"
